version: "3.7"
services:
  app:
    build:
      context: .
      target: debugger
    environment:
      - APP_ENV=local
      - GRACEFUL_SHUTDOWN_TIMEOUT_SECOND=1
      - LOG_LEVEL=debug
      - JWT_SECRET_KEY=samplekey
      - DB_NAME=toebeans
      - DB_USER=toebeans
      - DB_PASSWORD=secret
      - DB_HOST=db-test
      - DB_PORT=3306
      - GOOGLE_API_KEY=test_google_api_key # must not be real key
      - AWS_REGION=ap-​northeast-1
      - AWS_ACCESS_KEY=test_access_key # must not be real key
      - AWS_SECRET_KEY=test_secret_key # must not be real key
      - S3_BUCKET_POSTINGS=/toebeans-postings
      - S3_BUCKET_ICONS=/toebeans-icons
      - SYSTEM_EMAIL=no-reply@toebeans.tk
      - TZ=Asia/Tokyo
    volumes:
      - ./:/go/src/github.com/gold-kou/ToeBeans/backend:cached
      - /go/src/github.com/gold-kou/ToeBeans/backend/.git
    networks:
      - backend
    depends_on:
      - db-test
      - minio
    command: dockerize -wait tcp://db-test:3306 -timeout 60s realize start --run --no-config

  db-test:
    image: mysql:5.7
    volumes:
      - ./toebeans-sql/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./toebeans-sql/mysql/entrypoint:/docker-entrypoint-initdb.d
      - db-test:/var/lib/mysql
    tmpfs:
      - /var/lib/mysql,mode=755
      - /var/log/mysql,mode=755
    environment:
      - MYSQL_DATABASE=toebeans
      - MYSQL_USER=toebeans
      - MYSQL_PASSWORD=secret
      - MYSQL_ROOT_PASSWORD=root
      - TZ=Asia/Tokyo
    networks:
      - backend
    ports:
      - 3306:3306

  minio:
    image: minio/minio:RELEASE.2020-10-03T02-19-42Z
    volumes:
      - "./.docker-compose-data/minio/data:/export"
      - "./.docker-compose-data/minio/config:/root/.minio"
    environment:
      MINIO_ACCESS_KEY: test_access_key
      MINIO_SECRET_KEY: test_secret_key
      MINIO_REGION: ap-​northeast-1
    entrypoint: sh
    command: -c 'mkdir -p /images/toebeans-icons && mkdir -p /images/toebeans-postings && /usr/bin/minio server /images'
    networks:
      - backend
    ports:
      - 9000:9000

networks:
  backend:

volumes:
  db-test:
